_type: export
__export_format: 4
__export_date: 2022-07-09T16:29:20.163Z
__export_source: insomnia.desktop.app:v2022.3.0
resources:
  - _id: req_f74f3e2ffa2a445d895c0c47f373f992
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1657380649186
    created: 1657203433353
    url: http://localhost:3333/veiculos
    name: My Request
    description: ""
    method: GET
    body:
      mimeType: multipart/form-data
      params:
        - id: pair_c92402dc98f943f89c16fa25638bc14c
          name: file
          value: ""
          description: ""
          type: file
          fileName: /home/Rafael/Desktop/file.csv
    parameters:
      - id: pair_20111eef23a64e4d82d3fd7402192fe3
        name: ok
        value: sim
        description: ""
        disabled: true
      - id: pair_525e3b2abbeb4b4489428397b34c709c
        name: des
        value: ok
        description: ""
        disabled: true
      - id: pair_5204b91d3cd541f98abb31c127788e2f
        name: pl
        value: JUP9876
        description: ""
        disabled: true
      - id: pair_34603a4c67e948b68d3d70f4a17a082b
        name: km
        value: sim
        description: ""
        disabled: true
      - id: pair_707f6c8634f34acca4b1d9318e8af750
        name: ct
        value: sim
        description: ""
    headers:
      - name: Content-Type
        value: multipart/form-data
        id: pair_492e3a0d46bf44b694458dfabfe61ac8
    authentication: {}
    metaSortKey: -1657203433353
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    parentId: null
    modified: 1654782643425
    created: 1654782643425
    name: New Document
    description: ""
    scope: design
    _type: workspace
  - _id: req_bbcc51710ecb4ea4a1d303bf1b4f8b61
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1657216984020
    created: 1657215050321
    url: http://localhost:3333/client
    name: My Request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1657172038026.8125
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_0527cad55c8d4ee8b0131d68fd3b4bee
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1657216990932
    created: 1657211071805
    url: http://localhost:3333/empresas
    name: My Request
    description: ""
    method: GET
    body:
      mimeType: multipart/form-data
      params:
        - id: pair_c92402dc98f943f89c16fa25638bc14c
          name: file
          value: ""
          description: ""
          type: file
          fileName: /home/Rafael/Desktop/projetos/bdmongo/empresas/file.csv
    parameters: []
    headers:
      - name: Content-Type
        value: multipart/form-data
        id: pair_492e3a0d46bf44b694458dfabfe61ac8
    authentication: {}
    metaSortKey: -1657140642700.625
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_bbfb206ecf44432c8a26ea809078bca0
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1657216996963
    created: 1657213613350
    url: http://localhost:3333/funcionarios
    name: My Request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1657124945037.5312
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_34cb95e3d9174460860d8b893e9e219c
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1657214231510
    created: 1657214194081
    url: http://localhost:3333/empresas?_id=62c7094cd5a14b5c9eb5480b
    name: My Request
    description: ""
    method: PUT
    body:
      mimeType: multipart/form-data
      params:
        - id: pair_c92402dc98f943f89c16fa25638bc14c
          name: file
          value: ""
          description: ""
          type: file
          fileName: /home/Rafael/Desktop/projetos/bdmongo/venda/Planilha sem título -
            Página4.csv
    parameters: []
    headers:
      - name: Content-Type
        value: multipart/form-data
        id: pair_492e3a0d46bf44b694458dfabfe61ac8
    authentication: {}
    metaSortKey: -1657109247374.4375
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_23824c81842e42dbb4af0f795e9f2171
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1657205120870
    created: 1657204354465
    url: http://localhost:3333/despesas?id=62c6f12ca0f7ebaffa78007a
    name: My Request
    description: ""
    method: PUT
    body:
      mimeType: multipart/form-data
      params:
        - id: pair_c92402dc98f943f89c16fa25638bc14c
          name: file
          value: ""
          description: ""
          type: file
          fileName: /home/Rafael/Desktop/projetos/Nova pasta/file.csv
    parameters: []
    headers:
      - name: Content-Type
        value: multipart/form-data
        id: pair_492e3a0d46bf44b694458dfabfe61ac8
    authentication: {}
    metaSortKey: -1657077852048.25
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3aefce4ee36541908214cfd089a17a16
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1657203577813
    created: 1657203570131
    url: http://localhost:3333/veiculos
    name: My Request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1656952270743.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_f8e7348474ec4bae97b9bcd22188f4e2
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1657213741974
    created: 1657213625779
    url: http://localhost:3333/funcionarios
    name: My Request
    description: ""
    method: POST
    body:
      mimeType: multipart/form-data
      params:
        - id: pair_67c1ba165a4b4b7a8aa924a421899da2
          name: file
          value: ""
          description: ""
          type: file
          fileName: /home/Rafael/Desktop/projetos/bdmongo/funcionario/Planilha sem título
            - Página3 .csv
    parameters: []
    headers:
      - name: Content-Type
        value: multipart/form-data
        id: pair_a9beba7fc3db43998ee3a75a83842e63
    authentication: {}
    metaSortKey: -1656763898786.375
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3dc9cd27a0244fcc984a621a5d0adf5b
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1655402885721
    created: 1655402355342
    url: http://localhost:3333/client?id=62ab709feea154971adf1467
    name: My Request
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1655402355342
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: env_778a2aabad0bd273d65621117049dd1fe0f74dec
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1655216712297
    created: 1654782643443
    name: Base Environment
    data:
      base_url: "{{ scheme }}://{{ host }}{{ base_path }}"
      baseUrl: http://localhost:4000/api/v1
    dataPropertyOrder:
      "&":
        - baseUrl
    color: null
    isPrivate: false
    metaSortKey: 1654782643443
    _type: environment
  - _id: jar_778a2aabad0bd273d65621117049dd1fe0f74dec
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1654782643446
    created: 1654782643446
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_348b52ee6f724079bb3fe2926eea3aa2
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1657378932730
    created: 1654782643438
    fileName: New Document
    contents: >-
      openapi: 3.0.0

      info:
        description: "This is a sample server Petstore server.  You can find out more about
          Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
          #swagger](http://swagger.io/irc/).  For this sample, you can use the api key
          `special-key` to test the authorization filters."
        version: 1.0.2
        title: Swagger Petstore
        termsOfService: http://swagger.io/terms/
        contact:
          email: apiteam@swagger.io
        license:
          name: Apache 2.0
          url: http://www.apache.org/licenses/LICENSE-2.0.html
      tags:
        - name: pet
          description: Everything about your Pets
          externalDocs:
            description: Find out more
            url: http://swagger.io
        - name: store
          description: Access to Petstore orders
        - name: user
          description: Operations about user
          externalDocs:
            description: Find out more about our store
            url: http://swagger.io
      paths:
        /pet:
          post:
            tags:
              - pet
            summary: Add a new pet to the store
            description: ""
            operationId: addPet
            requestBody:
              $ref: "#/components/requestBodies/Pet"
            responses:
              "405":
                description: Invalid input
          put:
            tags:
              - pet
            summary: Update an existing pet
            description: ""
            operationId: updatePet
            requestBody:
              $ref: "#/components/requestBodies/Pet"
            responses:
              "400":
                description: Invalid ID supplied
              "404":
                description: Pet not found
              "405":
                description: Validation exception
        /pet/findByStatus:
          get:
            tags:
              - pet
            summary: Finds Pets by status
            description: Multiple status values can be provided with comma separated strings
            operationId: findPetsByStatus
            parameters:
              - name: status
                in: query
                description: Status values that need to be considered for filter
                required: true
                explode: true
                schema:
                  type: array
                  items:
                    type: string
                    enum:
                      - available
                      - pending
                      - sold
                    default: available
            responses:
              "200":
                description: successful operation
                content:
                  application/xml:
                    schema:
                      type: array
                      items:
                        $ref: "#/components/schemas/Pet"
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: "#/components/schemas/Pet"
              "400":
                description: Invalid status value
        /pet/findByTags:
          get:
            tags:
              - pet
            summary: Finds Pets by tags
            description: Multiple tags can be provided with comma separated strings. Use tag1,
              tag2, tag3 for testing.
            operationId: findPetsByTags
            parameters:
              - name: tags
                in: query
                description: Tags to filter by
                required: true
                explode: true
                schema:
                  type: array
                  items:
                    type: string
            responses:
              "200":
                description: successful operation
                content:
                  application/xml:
                    schema:
                      type: array
                      items:
                        $ref: "#/components/schemas/Pet"
                  application/json:
                    schema:
                      type: array
                      items:
                        $ref: "#/components/schemas/Pet"
              "400":
                description: Invalid tag value
            deprecated: true
        "/pet/{petId}":
          get:
            tags:
              - pet
            summary: Find pet by ID
            description: Returns a single pet
            operationId: getPetById
            parameters:
              - name: petId
                in: path
                description: ID of pet to return
                required: true
                schema:
                  type: integer
                  format: int64
            responses:
              "200":
                description: successful operation
                content:
                  application/xml:
                    schema:
                      $ref: "#/components/schemas/Pet"
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Pet"
              "400":
                description: Invalid ID supplied
              "404":
                description: Pet not found
          post:
            tags:
              - pet
            summary: Updates a pet in the store with form data
            description: ""
            operationId: updatePetWithForm
            parameters:
              - name: petId
                in: path
                description: ID of pet that needs to be updated
                required: true
                schema:
                  type: integer
                  format: int64
            requestBody:
              content:
                application/x-www-form-urlencoded:
                  schema:
                    type: object
                    properties:
                      name:
                        description: Updated name of the pet
                        type: string
                      status:
                        description: Updated status of the pet
                        type: string
            responses:
              "405":
                description: Invalid input
          delete:
            tags:
              - pet
            summary: Deletes a pet
            description: ""
            operationId: deletePet
            parameters:
              - name: api_key
                in: header
                required: false
                schema:
                  type: string
              - name: petId
                in: path
                description: Pet id to delete
                required: true
                schema:
                  type: integer
                  format: int64
            responses:
              "400":
                description: Invalid ID supplied
              "404":
                description: Pet not found
        /store/inventory:
          get:
            tags:
              - store
            summary: Returns pet inventories by status
            description: Returns a map of status codes to quantities
            operationId: getInventory
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                      type: object
                      additionalProperties:
                        type: integer
                        format: int32
        /store/order:
          post:
            tags:
              - store
            summary: Place an order for a pet
            description: ""
            operationId: placeOrder
            requestBody:
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Order"
              description: order placed for purchasing the pet
              required: true
            responses:
              "200":
                description: successful operation
                content:
                  application/xml:
                    schema:
                      $ref: "#/components/schemas/Order"
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Order"
              "400":
                description: Invalid Order
        "/store/order/{orderId}":
          get:
            tags:
              - store
            summary: Find purchase order by ID
            description: For valid response try integer IDs with value >= 1 and <= 10. Other
              values will generated exceptions
            operationId: getOrderById
            parameters:
              - name: orderId
                in: path
                description: ID of pet that needs to be fetched
                required: true
                schema:
                  type: integer
                  format: int64
                  minimum: 1
                  maximum: 10
            responses:
              "200":
                description: successful operation
                content:
                  application/xml:
                    schema:
                      $ref: "#/components/schemas/Order"
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Order"
              "400":
                description: Invalid ID supplied
              "404":
                description: Order not found
          delete:
            tags:
              - store
            summary: Delete purchase order by ID
            description: For valid response try integer IDs with positive integer value. Negative
              or non-integer values will generate API errors
            operationId: deleteOrder
            parameters:
              - name: orderId
                in: path
                description: ID of the order that needs to be deleted
                required: true
                schema:
                  type: integer
                  format: int64
                  minimum: 1
            responses:
              "400":
                description: Invalid ID supplied
              "404":
                description: Order not found
        /user:
          post:
            tags:
              - user
            summary: Create user
            description: This can only be done by the logged in user.
            operationId: createUser
            requestBody:
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/User"
              description: Created user object
              required: true
            responses:
              default:
                description: successful operation
        /user/createWithArray:
          post:
            tags:
              - user
            summary: Creates list of users with given input array
            description: ""
            operationId: createUsersWithArrayInput
            requestBody:
              $ref: "#/components/requestBodies/UserArray"
            responses:
              default:
                description: successful operation
        /user/createWithList:
          post:
            tags:
              - user
            summary: Creates list of users with given input array
            description: ""
            operationId: createUsersWithListInput
            requestBody:
              $ref: "#/components/requestBodies/UserArray"
            responses:
              default:
                description: successful operation
        /user/login:
          get:
            tags:
              - user
            summary: Logs user into the system
            description: ""
            operationId: loginUser
            parameters:
              - name: username
                in: query
                description: The user name for login
                required: true
                schema:
                  type: string
              - name: password
                in: query
                description: The password for login in clear text
                required: true
                schema:
                  type: string
            responses:
              "200":
                description: successful operation
                headers:
                  X-Rate-Limit:
                    description: calls per hour allowed by the user
                    schema:
                      type: integer
                      format: int32
                  X-Expires-After:
                    description: date in UTC when token expires
                    schema:
                      type: string
                      format: date-time
                content:
                  application/xml:
                    schema:
                      type: string
                  application/json:
                    schema:
                      type: string
              "400":
                description: Invalid username/password supplied
        /user/logout:
          get:
            tags:
              - user
            summary: Logs out current logged in user session
            description: ""
            operationId: logoutUser
            responses:
              default:
                description: successful operation
        "/user/{username}":
          get:
            tags:
              - user
            summary: Get user by user name
            description: ""
            operationId: getUserByName
            parameters:
              - name: username
                in: path
                description: "The name that needs to be fetched. Use user1 for testing. "
                required: true
                schema:
                  type: string
            responses:
              "200":
                description: successful operation
                content:
                  application/xml:
                    schema:
                      $ref: "#/components/schemas/User"
                  application/json:
                    schema:
                      $ref: "#/components/schemas/User"
              "400":
                description: Invalid username supplied
              "404":
                description: User not found
          put:
            tags:
              - user
            summary: Updated user
            description: This can only be done by the logged in user.
            operationId: updateUser
            parameters:
              - name: username
                in: path
                description: name that need to be updated
                required: true
                schema:
                  type: string
            requestBody:
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/User"
              description: Updated user object
              required: true
            responses:
              "400":
                description: Invalid user supplied
              "404":
                description: User not found
          delete:
            tags:
              - user
            summary: Delete user
            description: This can only be done by the logged in user.
            operationId: deleteUser
            parameters:
              - name: username
                in: path
                description: The name that needs to be deleted
                required: true
                schema:
                  type: string
            responses:
              "400":
                description: Invalid username supplied
              "404":
                description: User not found
      externalDocs:
        description: Find out more about Swagger
        url: http://swagger.io
      servers:
        - url: https://petstore.swagger.io/v2
      components:
        requestBodies:
          UserArray:
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/User"
            description: List of user object
            required: true
          Pet:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Pet"
              application/xml:
                schema:
                  $ref: "#/components/schemas/Pet"
            description: Pet object that needs to be added to the store
            required: true
        schemas:
          Order:
            type: object
            properties:
              id:
                type: integer
                format: int64
              petId:
                type: integer
                format: int64
              quantity:
                type: integer
                format: int32
              shipDate:
                type: string
                format: date-time
              status:
                type: string
                description: Order Status
                enum:
                  - placed
                  - approved
                  - delivered
              complete:
                type: boolean
                default: false
            xml:
              name: Order
          User:
            type: object
            properties:
              id:
                type: integer
                format: int64
              username:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              password:
                type: string
              phone:
                type: string
              userStatus:
                type: integer
                format: int32
                description: User Status
            xml:
              name: User
          Category:
            type: object
            properties:
              id:
                type: integer
                format: int64
              name:
                type: string
            xml:
              name: Category
          Tag:
            type: object
            properties:
              id:
                type: integer
                format: int64
              name:
                type: string
            xml:
              name: Tag
          Pet:
            type: object
            required:
              - name
              - photoUrls
            properties:
              id:
                type: integer
                format: int64
              category:
                $ref: "#/components/schemas/Category"
              name:
                type: string
                example: doggie
              photoUrls:
                type: array
                xml:
                  name: photoUrl
                  wrapped: true
                items:
                  type: string
              tags:
                type: array
                xml:
                  name: tag
                  wrapped: true
                items:
                  $ref: "#/components/schemas/Tag"
              status:
                type: string
                description: pet status in the store
                enum:
                  - available
                  - pending
                  - sold
            xml:
              name: Pet
          ApiResponse:
            type: object
            properties:
              code:
                type: integer
                format: int32
              type:
                type: string
              message:
                type: string
    contentType: yaml
    _type: api_spec
  - _id: uts_c763b4cf2d424ca485472a1bda888ae2
    parentId: wrk_493c9bac97d94fb3a9fe1ef461fcf414
    modified: 1654782643451
    created: 1654782643451
    name: Example Test Suite
    _type: unit_test_suite
  - _id: env_env_778a2aabad0bd273d65621117049dd1fe0f74dec_sub
    parentId: env_778a2aabad0bd273d65621117049dd1fe0f74dec
    modified: 1657217068366
    created: 1657217068366
    name: OpenAPI env
    data:
      scheme: https
      base_path: /v2
      host: petstore.swagger.io
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1657217068366
    _type: environment
